// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseApi.Data_Access;

#nullable disable

namespace WarehouseApi.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20241115111506_NewModels")]
    partial class NewModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WarehouseApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductNumber")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WarehouseApi.Models.ProductAttributeKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductAttributeKeys");
                });

            modelBuilder.Entity("WarehouseApi.Models.ProductAttributeMapping", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductAttributeKeyId")
                        .HasColumnType("int");

                    b.Property<int>("ProductAttributeValueId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ProductAttributeKeyId", "ProductAttributeValueId");

                    b.HasIndex("ProductAttributeKeyId");

                    b.HasIndex("ProductAttributeValueId");

                    b.ToTable("ProductAttributeMappings");
                });

            modelBuilder.Entity("WarehouseApi.Models.ProductAttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductAttributeValues");
                });

            modelBuilder.Entity("WarehouseApi.Models.ProductAttributeMapping", b =>
                {
                    b.HasOne("WarehouseApi.Models.ProductAttributeKey", "ProductAttributeKey")
                        .WithMany("ProductAttributeMappings")
                        .HasForeignKey("ProductAttributeKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseApi.Models.ProductAttributeValue", "ProductAttributeValue")
                        .WithMany("ProductAttributeMappings")
                        .HasForeignKey("ProductAttributeValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseApi.Models.Product", "Product")
                        .WithMany("ProductAttributeMappings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductAttributeKey");

                    b.Navigation("ProductAttributeValue");
                });

            modelBuilder.Entity("WarehouseApi.Models.Product", b =>
                {
                    b.Navigation("ProductAttributeMappings");
                });

            modelBuilder.Entity("WarehouseApi.Models.ProductAttributeKey", b =>
                {
                    b.Navigation("ProductAttributeMappings");
                });

            modelBuilder.Entity("WarehouseApi.Models.ProductAttributeValue", b =>
                {
                    b.Navigation("ProductAttributeMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
